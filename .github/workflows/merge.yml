name: CI

on:
  pull_request:
    branches:
      - main

jobs:

  build-api:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./api
    steps:
    - uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.22.4'

    - name: Test
      run: go test -v ./...

    - name: Build
      run: go build -v ./...

    - uses: actions/checkout@v4
    - name: Build the Docker image
      run: docker build . --file Dockerfile --tag novoscript-api:$(date +%s)

    - name: Send message to Discord
      uses: Enichy/Send_Discord_Message_Action@v1.1.11
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        discord_webhook: ${{ secrets.DISCORD_WEBHOOK }}
        message: 'New pull request for API!'

  build-app:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./app
    steps:
    - uses: actions/checkout@v4

    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '16'

    - name: Install dependencies
      run: npm install

    - name: Build
      run: npm run test

    - name: Send message to Discord
      uses: Enichy/Send_Discord_Message_Action@v1.1.11
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        discord_webhook: ${{ secrets.DISCORD_WEBHOOK }}
        message: 'New pull request for APP!'

  build-admin:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./admin
    steps:
    - uses: actions/checkout@v4

    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '16'

    - name: Install dependencies
      run: npm install

    - name: Build
      run: npm run test

    - name: Send message to Discord
      uses: Enichy/Send_Discord_Message_Action@v1.1.11
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        discord_webhook: ${{ secrets.DISCORD_WEBHOOK }}
        message: 'New pull request for ADMIN!'